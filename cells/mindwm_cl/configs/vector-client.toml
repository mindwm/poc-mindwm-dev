data_dir = "${HOME}/.local/mindwm/vector"

# Pipe bytestream from TMUX
# sanitize control sequences
# and publish clean word to MindWM backend
[sources.tmux_udp]
address = "${MINDWM_CLIENT_VECTOR_UDP_BIND}:${MINDWM_CLIENT_VECTOR_UDP_PORT}"
mode = "udp"
type = "socket"
decoding.codec = "bytes"

[transforms.byte_or_chunk]
type = "route"
inputs = [ "tmux_udp" ]
route.one_byte = 'length(to_string!(.message)) == 1 || strip_ansi_escape_codes!(.message) == "\n"'
route.chunk = 'length(to_string!(.message)) > 1'

[transforms.tmux_words_raw]
inputs = ["byte_or_chunk.one_byte"]
type = "reduce"
ends_when = """
  strip_ansi_escape_codes!(.message) == " "  ||
  strip_ansi_escape_codes!(.message) == "\t" ||
  strip_ansi_escape_codes!(.message) == "\n"
"""
merge_strategies.message = "concat_raw"

[transforms.tmux_words]
type = "remap"
inputs = [ "tmux_words_raw" ]
source = ".message = strip_ansi_escape_codes!(.message)"

[transforms.tmux_chunk]
inputs = [ "byte_or_chunk.chunk" ]
type = "remap"
source = """
  clean = strip_ansi_escape_codes!(.message)
  words = split(clean, r'[[:space:]]')
  . = filter(words) -> |_i, v| { v != "" }
"""

# enrich with metadata
[transforms.with_meta]
type = "remap"
inputs = [ "tmux_words", "tmux_chunk" ]
source = """
msg = .message
del(.)
.knativebrokerttl = "255"
.specversion = "1.0"
.type = "word"
.source = "I don't know what it is"
.subject = "${MINDWM_BACK_NATS_SUBJECT_WORDS_IN}"
.datacontenttype = "application/json"
.data = {}
.data.word = msg
"""

# publish to MindWM backend
[sinks.back_nats_words]
inputs = [ "with_meta" ]
type = "nats"
subject = "${MINDWM_BACK_NATS_SUBJECT_WORDS_IN}"
url = "nats://${MINDWM_BACK_NATS_HOST}:${MINDWM_BACK_NATS_PORT}"
encoding.codec = "json"
auth.strategy = "user_password"
auth.user_password.user = "${MINDWM_BACK_NATS_USER}"
auth.user_password.password = "${MINDWM_BACK_NATS_PASS}"

[transforms.test]
type = "remap"
inputs = ["byte_or_chunk.chunk"]
source = ".message = strip_ansi_escape_codes!(.message)"

[sinks.debug]
inputs = ["with_meta"]
#inputs = ["test"]
#inputs = ["tmux_words"]
type = "console"
encoding.codec = "json"

